{"version":3,"sources":["image/login1.jpg","Main/Main.js","store.js","Info/Info.js","List/ListBox.js","List/List.js","App.js","AppContainer.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Main","state","pn","swipe","start","input1","e","_this","setState","target","value","clear","_this2","this","react_default","a","createElement","className","src","logo","alt","onClick","props","type","id","name","readOnly","Component","Store","React","createContext","Info","src_store","Consumer","store","index","phoneNum","ListBox","onClickHandle","updateValue","startTime","List","d","list","i","listPageMaxCount","concat","src_List_ListBox","key","endTime","action","createList","listData","App","handleChangeIndex","handleClick0","handleClick1","handleClick2","lib_default","onChangeIndex","enableMouseEvents","src_Info_Info","src_Main_Main","src_List_List","AppContainer","val","Object","defineProperty","Provider","src_App_0","Boolean","window","location","hostname","match","ReactDOM","render","src_AppContainer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd7eb4bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login1.273d4d67.jpg\";","import React, { Component } from 'react';\r\nimport logo from '../image/login1.jpg';\r\nimport './Main.css';\r\n\r\nclass Main extends Component {\r\n\r\nstate = {\r\n    pn: '',\r\n    swipe:'',\r\n    start:''\r\n}\r\n\r\ninput1 = (e) => {\r\n  this.setState({\r\n    pn: this.state.pn + e.target.value\r\n  })\r\n}\r\n\r\nclear = (e) => {\r\n  this.setState({\r\n    pn: \"\"\r\n  })\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"View1\">\r\n          <img src={logo} className=\"App-logo\" alt=\"login1\" />\r\n          <button className=\"prevButton\" onClick={this.props.swipe}>◀</button>\r\n        </div>\r\n        <div className=\"View2\">\r\n          <input\r\n            type=\"number\"\r\n            id=\"phonenum\"\r\n            name=\"phonenum\"\r\n            readOnly value={this.state.pn}/>\r\n\r\n          <button className=\"button1\" value=\"false\" onClick={()=>this.props.start()}>Start</button>\r\n        </div>\r\n        <div className=\"View3\">\r\n          <button className=\"button2\" value=\"7\" onClick={this.input1}>7</button>\r\n          <button className=\"button2\" value=\"8\" onClick={this.input1}>8</button>\r\n          <button className=\"button2\" value=\"9\" onClick={this.input1}>9</button>\r\n          <button className=\"button2\" value=\"4\" onClick={this.input1}>4</button>\r\n          <button className=\"button2\" value=\"5\" onClick={this.input1}>5</button>\r\n          <button className=\"button2\" value=\"6\" onClick={this.input1}>6</button>\r\n          <button className=\"button2\" value=\"1\" onClick={this.input1}>1</button>\r\n          <button className=\"button2\" value=\"2\" onClick={this.input1}>2</button>\r\n          <button className=\"button2\" value=\"3\" onClick={this.input1}>3</button>\r\n          <button className=\"button2\" value=\"\" onClick={this.clear}>clear</button>\r\n          <button className=\"button2\" value=\"0\" onClick={this.input1}>0</button>\r\n          <button className=\"button2\" value=\"\" onClick={this.clear}>Enter</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nconst Store = React.createContext(null);\r\nexport default Store;\r\n","import React, { Component } from 'react';\r\nimport './Info.css';\r\n\r\nimport Store from \"../store.js\";\r\n\r\nclass Info extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"info\">\r\n          <div className=\"infoView1\">\r\n            <div className=\"userInfoView\">\r\n              <Store.Consumer>{store => (<div className=\"label\">{store.state.index}</div>)}</Store.Consumer>\r\n              <Store.Consumer>{store => (<div className=\"label\">{store.state.name}</div>)}</Store.Consumer>\r\n              <Store.Consumer>{store => (<div className=\"label\">{store.state.phoneNum}</div>)}</Store.Consumer>\r\n            </div>\r\n          </div>\r\n          <div className=\"infoView2\">\r\n          </div>\r\n          <div className=\"infoView3\">\r\n          </div>\r\n          <button className=\"nextButton\" value=\"1\" onClick={this.props.swipe}>▶</button>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;\r\n","import React, { Component } from 'react';\r\nimport './ListBox.css';\r\n\r\nimport Store from \"../store.js\";\r\n\r\nclass ListBox extends Component {\r\n\r\nonClickHandle = (e) =>{\r\n    this.props.swipe(e);\r\n}\r\n\r\n  render() {\r\n    return (\r\n\r\n        <Store.Consumer>\r\n          {store => (\r\n            <button\r\n              className=\"BoxButton\"\r\n              value={this.props.phoneNum}\r\n              onClick={()=>{\r\n                this.onClickHandle(this.props.phoneNum);\r\n                store.updateValue(\"index\", this.props.index);\r\n                store.updateValue(\"name\", this.props.name);\r\n                store.updateValue(\"phoneNum\", this.props.phoneNum);\r\n              }}\r\n            >\r\n              <div className=\"BoxButtonText_Title\">{this.props.index}</div>\r\n              <div className=\"BoxButtonText_etc\">{this.props.name ? this.props.name : '-'}</div>\r\n              <div className=\"BoxButtonText_etc\">{this.props.startTime ? this.props.startTime : '-'}</div>\r\n            </button>\r\n          )}\r\n        </Store.Consumer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListBox;\r\n","import React, { Component } from 'react';\r\nimport './List.css';\r\n\r\nimport Store from \"../store.js\";\r\nimport ListBox from \"./ListBox.js\";\r\n\r\nclass List extends Component {\r\n\r\n\r\n  createList(d) {\r\n      var list = [];\r\n      for (var i = 0; i < this.props.listPageMaxCount; i++) {\r\n       d[i] ?\r\n         list = list.concat(<ListBox\r\n          key={d[i].index}\r\n          index={d[i].index}\r\n          name={d[i].name}\r\n          startTime={d[i].startTime}\r\n          endTime={d[i].endTime}\r\n          phoneNum={d[i].phoneNum}\r\n          swipe={this.props.swipe}\r\n          action={this.props.action}\r\n        />) : list = list.concat(<ListBox key={i} index={i} swipe={this.props.swipe} action={this.props.action}/>)\r\n      }\r\n      return list;\r\n    }\r\n\r\n  render() {\r\n    return (\r\n          <div className=\"list\">\r\n            <div className=\"listView\">\r\n              <label className=\"titleText\">User List</label>\r\n              <div className=\"listBox\">\r\n                <Store.Consumer>\r\n                  {store => (this.createList(store.state.listData))}\r\n                </Store.Consumer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport './App.css';\n\nimport Main from'./Main/Main.js';\nimport Info from'./Info/Info.js';\nimport List from'./List/List.js';\n\nclass App extends Component {\n\nlistPageMaxCount = 30;\n\n\nstate = {\n index: 1,\n}\n\n  handleChangeIndex = index => {\n    this.setState({\n      index : index\n    });\n  };\n\n  handleClick0 = index => {\n    this.setState({\n      index: 0\n    });\n  };\n  handleClick1 = index => {\n    this.setState({\n      index: 1\n    });\n  };\n  handleClick2 = index => {\n    this.setState({\n      index: 2\n    });\n  };\n\n\n  render() {\n    const { index } = this.state;\n\n    return (\n      <div className=\"swipe-wrap\">\n        <SwipeableViews index={index} onChangeIndex={this.handleChangeIndex} enableMouseEvents >\n          <div> <Info swipe={this.handleClick1} /> </div>\n          <div> <Main swipe={this.handleClick0} start={this.handleClick2} /> </div>\n          <div> <List swipe={this.handleClick0} listPageMaxCount={this.listPageMaxCount} /> </div>\n        </SwipeableViews>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport App from './App.js';\r\nimport Store from \"./store.js\";\r\n\r\nclass AppContainer extends Component {\r\n  state = {\r\n    index:'null',\r\n    name:'null',\r\n    startTime:'null',\r\n    endTime:'null',\r\n    phoneNum:'null',\r\n    listData: [\r\n      {\r\n        index:'0',\r\n        name:'노리',\r\n        startTime:'00:00:00',\r\n        endTime:'00:00:00',\r\n        phoneNum:'010-1111-1111',\r\n      },\r\n      {\r\n        index:'1',\r\n        name:'베가스',\r\n        startTime:'00:00:00',\r\n        endTime:'00:00:00',\r\n        phoneNum:'010-2222-2222',\r\n      },\r\n      {\r\n        index:'2',\r\n        name:'지니',\r\n        startTime:'00:00:00',\r\n        endTime:'00:00:00',\r\n        phoneNum:'010-3333-3333',\r\n      },\r\n      {\r\n        index:'3',\r\n        name:'해리포터',\r\n        startTime:'00:00:00',\r\n        endTime:'00:00:00',\r\n        phoneNum:'010-4444-4444',\r\n      }\r\n    ],\r\n  }\r\n\r\n  updateValue = (key, val) => {\r\n    this.setState({[key]: val});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Store.Provider value={{state: this.state, updateValue: this.updateValue}}>\r\n        <App />\r\n      </Store.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppContainer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './AppContainer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}